
type User {
    id: ID!
    first_name: String!
    last_name: String!
    email: String!
    city: String!
    state: String!
    image_url: String
    gender: String
    personal_url: String
    blog_url: String
    twitter_url: String
    portfolio_url: String
    linkedin_url: String
    github_url: String
    bio: String
    payment_info: Boolean
}

type Query {
    info: String!
    users: [User!]!
    user(
        id: ID!
    ): User!
    me: User!
}

type Mutation {

    ## Sign Up User
    signup(
    first_name: String!
    last_name: String!
    email: String!
    password: String!
    city: String!
    state: String!
    image_url: String
    gender: String
    personal_url: String
    blog_url: String
    twitter_url: String
    portfolio_url: String
    linkedin_url: String
    github_url: String
    bio: String
    payment_info: Boolean
    ): AuthPayload!

    ## Login User
    login(
        email: String!
        password: String!
    ): AuthPayload!

    ## Update User
    update(
      first_name: String
      last_name: String
      password: String
      email: String
      city: String
      state: String
      image_url: String
      gender: String
      personal_url: String
      blog_url: String
      twitter_url: String
      portfolio_url: String
      linkedin_url: String
      github_url: String
      bio: String
      payment_info: Boolean
    ): User!

    ## Delete User
    deleteUser: User!

}

type AuthPayload {
    token: String!
    user: User!
}